{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","className","src","alt","map","genre","index","slice","App","props","state","isLoading","movies","getMovies","a","axios","get","data","setState","console","log","this","movie","medium_cover_image","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAqCeA,MAjCf,YAA6D,EAA5CC,GAA6C,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OACjD,OACE,sBAAKC,UAAU,QAAf,UACE,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IAErC,sBAAKI,UAAU,cAAf,UACE,oBAAIA,UAAU,eAAd,SAA8BJ,IAC9B,oBAAII,UAAU,cAAd,SAA6BL,IAC7B,oBAAIK,UAAU,gBAAd,SACGD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OAEV,aADA,CACA,MAAgBL,UAAU,gBAA1B,SAGGI,GAHMC,QAOb,oBAAGL,UAAU,iBAAb,UAA+BH,EAAQS,MAAM,EAAG,KAAhD,gBCyDOC,G,wDAxEb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAGRC,MAAQ,CACNC,WAAW,EACXC,OAAQ,IANS,EASnBC,UATmB,sBASP,8BAAAC,EAAA,sEAYAC,IAAMC,IACd,4DAbQ,gBAUEJ,EAVF,EASRK,KACEA,KAAQL,OAOZ,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IAjBzB,2CATO,E,qDA4BnB,WAEEQ,QAAQC,IAAI,sBAMZC,KAAKR,c,gCAEP,WAEEM,QAAQC,IAAI,qB,oBAGd,WAEE,MAA8BC,KAAKX,MAA3BC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,OAEnB,OADAO,QAAQC,IAAI,iBAEV,yBAASnB,UAAU,YAAnB,SACGU,EACC,qBAAKV,UAAU,SAAf,SACE,sBAAMA,UAAU,eAAhB,0BAGF,qBAAKA,UAAU,SAAf,SACGW,EAAOR,KAAI,SAACkB,GAAD,OACV,cAAC,EAAD,CAEE3B,GAAI2B,EAAM3B,GACVC,KAAM0B,EAAM1B,KACZC,MAAOyB,EAAMzB,MACbC,QAASwB,EAAMxB,QACfC,OAAQuB,EAAMC,mBACdvB,OAAQsB,EAAMtB,QANTsB,EAAM3B,e,GA1DT6B,IAAMC,YCDxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAKFC,SAASC,eAAe,W","file":"static/js/main.aba55e5e.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Movie.css\";\n\nfunction Movie({ id, year, title, summary, poster, genres }) {\n  return (\n    <div className=\"movie\">\n      <img src={poster} alt={title} title={title} />\n      {/* src: 이미지경로, alt: 이미지설명, title: 마우스 커서를 올릴 때 보여질 이미지 제목 */}\n      <div className=\"movie__data\">\n        <h3 className=\"movie__title\">{title}</h3>\n        <h5 className=\"movie__year\">{year}</h5>\n        <ul className=\"movie__genres\">\n          {genres.map((genre, index) => (\n            // map에 있는 각각의 item에 key를 설정하지않으면 안됨\n            <li key={index} className=\"genres__genre\">\n              {/*  li => 리스트 */}\n              {/* {index} */}\n              {genre}\n            </li>\n          ))}\n        </ul>\n        <p className=\"movie__summary\">{summary.slice(0, 180)}...</p>\n      </div>\n    </div>\n  );\n}\n\nMovie.propTypes = {\n  id: PropTypes.number.isRequired,\n  year: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  summary: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default Movie;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    // console.log(\"hello\");\n  }\n  state = {\n    isLoading: true,\n    movies: [],\n  };\n\n  getMovies = async () => {\n    //비동기 함수로 선언 ==> 너는 이걸 기다려야해\n    //fetch()\n    //무엇을? ==> await\n    // axios : fetch위에 있는 작은 layer ==> npm install 필요\n    // const movies = await axios.get(\"https://yts-proxy.now.sh/list_movies.json\");\n    // console.log(movies.data.data.movies);\n    // ==> es6 문법에 맞게\n    const {\n      data: {\n        data: { movies },\n      },\n    } = await axios.get(\n      \"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\"\n    );\n    // console.log(movies);\n    // this.setState({ movies: movies });\n    this.setState({ movies, isLoading: false });\n  };\n  componentDidMount() {\n    //처음 랜더링 후 알려줌\n    console.log(\"component rendered\");\n    //delay함수\n    //setTimeout(() => this.setState({ isLoading: false }), 2000);\n    //fetch()\n    //fetch위에 있는 작은 layer ==> npm install 필요\n    // const movies = axios.get(\"https://yts-proxy.now.sh/list_movies.json\");\n    this.getMovies();\n  }\n  componentDidUpdate() {\n    // state변경 후\n    console.log(\"I'm just upated\");\n  }\n\n  render() {\n    //ES6 문법\n    const { isLoading, movies } = this.state;\n    console.log(\"I'm rendering\");\n    return (\n      <section className=\"container\">\n        {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader__text\">Loading...</span>\n          </div>\n        ) : (\n          <div className=\"movies\">\n            {movies.map((movie) => (\n              <Movie\n                key={movie.id}\n                id={movie.id}\n                year={movie.year}\n                title={movie.title}\n                summary={movie.summary}\n                poster={movie.medium_cover_image}\n                genres={movie.genres}\n              />\n            ))}\n          </div>\n        )}\n      </section>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n//import Potato from './Potato'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    {/* <Potato />   */}\n    {/* 이전엔 component 2개이상 rendering하려하면 에러나서\n     App안에서 Potato 부르거나하게 선언해서 사용해야했었음 */}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n  \n\n"],"sourceRoot":""}